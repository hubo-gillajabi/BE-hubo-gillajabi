plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
}

group = 'com.hubo'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = '0.8.12'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.2.5'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    implementation 'org.springframework.boot:spring-boot-starter-security:3.2.5'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-oauth2-client
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client:3.2.5'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.2.5'


    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.754'

    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'


    implementation 'org.springframework.boot:spring-boot-starter-batch'

//    // https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa
//    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
//    annotationProcessor "com.querydsl:querydsl-apt:5.1.0:jakarta"
//    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // https://mvnrepository.com/artifact/junit/junit
    testImplementation 'junit:junit:4.13.1'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // https://mvnrepository.com/artifact/org.springframework.retry/spring-retry
    implementation group: 'org.springframework.retry', name: 'spring-retry', version: '2.0.6'


    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'

    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation 'org.jsoup:jsoup:1.17.2'

//    implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:14.0.0'
//
//    // testing facilities
//    testImplementation 'com.graphql-java-kickstart:graphql-spring-boot-starter-test:14.0.0'

    testImplementation("com.navercorp.fixturemonkey:fixture-monkey-starter:1.0.17")

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.4'


    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-graphql
    implementation 'org.springframework.boot:spring-boot-starter-graphql:3.2.5'

    implementation 'org.springframework.boot:spring-boot-starter-mail'

}

tasks.register('copyResources', Copy) {
    from './BE-hubo-gillajabi-resources/resources'
    include 'application.yml', 'application-*.yml', "db/*", "db/*/*", "graphql/*", "graphql/*/*", "templates/*", "templates/*/*", "templates/*/*/*", "*"
    into 'src/main/resources'
}

tasks.register('copyTestResources', Copy) {
    from './BE-hubo-gillajabi-resources/test'
    include 'mockedResponses/*'
    into 'src/test/resources'
}

processResources.dependsOn('copyResources')
processTestResources.dependsOn('copyTestResources')


jacocoTestReport {

    reports {
        html.required = true
        xml.required = true
        csv.required = false
    }
}

test {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

//sourceSets {
//    main {
//        java {
//            srcDirs += [layout.buildDirectory.dir("generated/sources/annotationProcessor/java/main").get().asFile]
//        }
//    }
//}
//
//tasks.withType(JavaCompile).configureEach {
//    options.annotationProcessorPath = configurations.annotationProcessor
//    destinationDirectory.set(layout.buildDirectory.dir("generated/sources/annotationProcessor/java/main").get().asFile)
//}
//
//clean {
//    delete layout.buildDirectory.dir("generated/sources/annotationProcessor/java/main")
//}
